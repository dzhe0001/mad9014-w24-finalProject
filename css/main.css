:root {
  --primary-color: #cc274c;
  --secondary-color: #2e4054;
  --text-color: #333;
}

a,
button {
  transition: 0.3s;

  &:is(:hover, :focus) {
    transition: 0.3s;
  }
}

body {
  color: var(--text-color);
}

.header {
  background: var(--secondary-color);
  color: #fff;
  padding: 1rem 0;

  .title {
    margin: 0;
  }
}

.header .container {
  display: flex;
  align-items: center;
  flex-direction: column;

  @media only screen and (min-width: 26rem) {
    flex-direction: row;
  }
}

.nav {
  flex-grow: 1;

  .menu {
    display: flex;
    justify-content: flex-end;
    list-style: none;
    margin: 0;
    padding: 0;
    gap: 0.5rem;

    .link {
      text-decoration: none;
      color: #fff;
      padding: clamp(0.5rem, 1.5625vw, 1rem) clamp(0.75rem, 2.34375vw, 1.5rem);
      display: flex;
      align-items: center;
      font-size: clamp(0.75rem, 1.5625vw, 1rem);
      gap: 0.25rem;
      border-radius: 50rem;

      span {
        font-size: clamp(1rem, 2.34375vw, 1.5rem);
        pointer-events: none;
      }

      &.active {
        background: var(--primary-color);
      }

      &:is(:hover:not(.active), :focus:not(.active)) {
        background: #bed2e0;
        color: var(--text-color);
      }
    }
  }
}

.search {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex-direction: column;
  width: 100%;
  justify-content: center;
  margin-bottom: clamp(2.5rem, 7.8125vw, 5rem);

  label {
    font-size: clamp(1rem, 2.34375vw, 1.5rem);
  }

  &.hidden {
    display: none;
  }
}

.search__block {
  position: relative;
  /* width: min(100%, 25rem); */
  flex-grow: 1;
  max-width: 25rem;

  input,
  button {
    border-radius: 5rem;
    border: none;
    outline: none;
    font-family: inherit;
  }

  input {
    background: transparent;
    font-size: clamp(0.9rem, 1.5625vw, 1rem);
    color: #333;
    padding: clamp(0.375rem, 1.171875vw, 0.75rem) clamp(4rem, 9.375vw, 6rem)
      clamp(0.375rem, 1.171875vw, 0.75rem) 1rem;
    width: 100%;
    position: relative;
    z-index: 1;
    border: 0.0625rem solid var(--text-color);
  }

  button {
    position: absolute;
    z-index: 2;
    background: var(--secondary-color);
    color: #fff;
    font-size: clamp(0.75rem, 1.3671875vw, 0.875rem);
    padding: 0.25rem clamp(0.5rem, 1.5625vw, 1rem);
    top: 0.25rem;
    bottom: 0.25rem;
    right: 0.25rem;
    cursor: pointer;
    display: flex;
    align-items: center;
    text-align: center;
    justify-content: center;

    &:not(:disabled):is(:hover, :focus) {
      transform: scale(0.9);
    }
  }
}

.content {
  padding: clamp(2.5rem, 7.8125vw, 5rem) 0;
}

.images {
  display: grid;
  grid-template-columns: 1fr;
  gap: 1rem;
}

.image {
  aspect-ratio: 1/1;
  position: relative;
  overflow: hidden;
  border-radius: 1rem;
  z-index: 1;
  cursor: pointer;
}

.image__link {
  width: 100%;
  height: 100%;
  display: block;
}

.image__src {
  width: 100%;
  height: 100%;
  display: block;
  object-fit: cover;
  object-position: center;
  transition: 0.3s;
  &:is(:hover, :focus) {
    opacity: 0.7;
    transition: 0.3s;
  }
}

.image__author {
  position: absolute;
  z-index: 2;
  right: 1rem;
  bottom: 1rem;
  border-radius: 5rem;
  padding: 0.25rem 0.5rem;
  color: #fff;
  text-decoration: none;
  font-size: 0.75rem;
  background: var(--primary-color);
  font-weight: 500;
  pointer-events: none;

  &:is(:hover, :focus) {
    color: #fff;
  }
}

.image:not(:has(.image__src)) {
  background: rgb(195, 195, 195);

  &::before {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    width: 12rem;
    left: -12rem;
    background: linear-gradient(
      to right,
      transparent,
      rgba(255, 255, 255, 0.5),
      transparent
    );
    animation: loader 1.5s infinite;
  }
}

@keyframes loader {
  from {
    left: -12rem;
  }

  to {
    left: calc(100% + 12rem);
  }
}

#dialog {
  border-radius: clamp(0.5rem, 3.125vw, 2rem);
  border: none;
  padding: 0;
  position: relative;
  max-width: calc(100% - 2rem);
  text-align: center;

  &::backdrop {
    background: rgba(0, 0, 0, 0.5);
  }

  svg,
  span {
    fill: var(--text-color);
    width: 100%;
    height: 100%;
    pointer-events: none;
  }

  .close-dialog {
    position: absolute;
    top: 1rem;
    right: 1rem;
    aspect-ratio: 1/1;
    width: clamp(1.5rem, 3.90625vw, 2.5rem);
    background: #fff;
    outline: none;
    border: none;
    border-radius: 50%;
    padding: 0.25rem;
    cursor: pointer;
    transition: 0.3s;

    svg{
      aspect-ratio: 1/1;
      height: auto;
    }

    &:hover {
      transform: rotate(180deg);
      transition: 0.3s;
    }
  }

  .error {
    max-width: 40rem;

    img {
      width: 100%;
      display: block;
    }

    .payload {
      padding: clamp(1rem, 3.125vw, 2rem);
      line-height: 1;
      color: var(--text-color);

      h2 {
        margin: 0 0 1rem 0;
      }

      p {
        margin: 0;
        font-size: clamp(0.9rem, 1.953125vw, 1.25rem);
      }
    }
  }
}

#loader {
  position: fixed;
  z-index: 1000;
  width: 4rem;
  aspect-ratio: 1/1;
  bottom: 4rem;
  right: 4rem;
  display: none;

  animation: spinner 1s infinite linear;

  svg {
    width: 100%;
    height: 100%;
    fill: var(--text-color);
  }
}

#results {
  display: none;
  margin-bottom: 2rem;
}

.control-buttons {
  position: absolute;
  bottom: 2rem;
  left: 2rem;
  right: 2rem;
  display: flex;
  justify-content: center;
  gap: 0.5rem;

  &.hidden {
    display: none;
  }

  button {
    text-decoration: none;
    color: #fff;
    padding: clamp(0.5rem, 1.5625vw, 1rem) clamp(0.75rem, 2.34375vw, 1.5rem);
    font-size: clamp(0.75rem, 1.5625vw, 1rem);
    display: none;
    align-items: center;
    gap: 0.25rem;
    border-radius: 50rem;
    border: none;
    background: var(--primary-color);
    cursor: pointer;

    span {
      font-size: clamp(1rem, 2.34375vw, 1.5rem);
      pointer-events: none;
    }

    &:hover {
      transform: scale(0.9);
    }
  }

  &.save {
    .save {
      display: flex;
    }
  }

  &.remove {
    .remove {
      display: flex;
    }
  }
}

@keyframes spinner {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(360deg);
  }
}

@media only screen and (min-width: 48rem) {
  .images {
    grid-template-columns: repeat(3, 1fr);
  }

  .search {
    flex-direction: row;
  }
}
